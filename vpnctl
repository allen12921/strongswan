#!/bin/bash

vpm_cmd=$1

if [ "$1" == "" ] || ([ "$1" != "satrt" ] && [ "$1" != "stop" ] && [ "$1" != "restart" ] && [ "$1" != "init" ]); then
  echo -e "\033[31mError: Unsupported options $1!\033[0m"
  echo -e "\033[32mUsing the examples: vpnctl start | stop | restart | init\033[0m"
fi


if [ "$1" == "start" ]; then
  echo -e "\033[32mstarting xl2tpd......\033[0m"
  /usr/sbin/xl2tpd -c /etc/xl2tpd/xl2tpd.conf
  echo -e "\033[32mstarting ipsec......\033[0m"
  ipsec start > /dev/null 2>&1
elif [ "$1" == "stop" ]; then
  echo -e "\033[33mstopping xl2tpd......\033[0m"
  kill `pgrep xl2tpd`
  echo -e "\033[33mstopping ipsec......\033[0m"
  ipsec stop > /dev/null 2>&1
elif [ "$1" == "restart" ]; then
  echo -e "\033[32mrestarting xl2tpd......\033[0m"
  kill `pgrep xl2tpd`
  /usr/sbin/xl2tpd -c /etc/xl2tpd/xl2tpd.conf
  echo -e "\033[32mrestarting ipsec......\033[0m"
  ipsec restart > /dev/null 2>&1
elif [ "$1" == "init" ]; then

  shellName=`ps | grep $$ | awk '{print $4}'`

  if [ "$shellName" == "zsh" ] || [ "$SHELL" == "/usr/bin/zsh" ]; then
    read "VPN_USER?Please input VPN_USER: "
    read "VPN_PASSWORD?Please input VPN_PASSWORD: "
    read "VPN_PSK?Please input VPN_PSK: "
  elif [ "$shellName" == "bash" ] || [ "$SHELL" == "/bin/bash" ]; then
    read -p "Please input VPN_USER: " VPN_USER
    read -p "Please input VPN_PASSWORD: " VPN_PASSWORD
    read -p "Please input VPN_PSK: " VPN_PSK
  fi

  sysctl -w net.ipv4.conf.all.rp_filter=2
  iptables --table nat --append POSTROUTING --jump MASQUERADE
  echo 1 > /proc/sys/net/ipv4/ip_forward
  for each in /proc/sys/net/ipv4/conf/*; do
  	echo 0 > $each/accept_redirects
  	echo 0 > $each/send_redirects
  done

  if [ "$VPN_PASSWORD" = "password" ] || [ "$VPN_PASSWORD" = "" ]; then
  	# Generate a random password
  	P1=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	P2=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	P3=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	VPN_PASSWORD="$P1$P2$P3"
  	echo "No VPN_PASSWORD set! Generated a random password: $VPN_PASSWORD"
  fi

  if [ "$VPN_PSK" = "password" ] || [ "$VPN_PSK" = "" ]; then
  	# Generate a random password
  	P1=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	P2=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	P3=`cat /dev/urandom | tr -cd abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789 | head -c 3`
  	VPN_PSK="$P1$P2$P3"
  	echo "No VPN_PSK set! Generated a random PSK key: $VPN_PSK"
  fi

  if [ "$VPN_PASSWORD" = "$VPN_PSK" ]; then
  	echo "It is not recommended to use the same secret as password and PSK key!"
  fi

  cat > /etc/ppp/l2tp-secrets <<EOF
# This file holds secrets for L2TP authentication.
# Username  Server  Secret  Hosts

"$VPN_USER" "*" "$VPN_PASSWORD" "*"
EOF

  cat > /etc/ipsec.secrets <<EOF
# This file holds shared secrets or RSA private keys for authentication.
# RSA private key for this host, authenticating it to any other host
# which knows the public part.  Suitable public keys, for ipsec.conf, DNS,
# or configuration of other implementations, can be extracted conveniently
# with "ipsec showhostkey".

: PSK "$VPN_PSK"

$VPN_USER : EAP "$VPN_PASSWORD"
$VPN_USER : XAUTH "$VPN_PASSWORD"
EOF

  echo "Starting XL2TPD process..."
  mkdir -p /var/run/xl2tpd
  /usr/sbin/xl2tpd -c /etc/xl2tpd/xl2tpd.conf
  ipsec start

fi
